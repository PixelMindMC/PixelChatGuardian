/*
 * This file is part of PixelChat Guardian.
 * Copyright (C) 2024 PixelMindMC
 */

// Apply plugins
plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.3'
}

// Define project group and version
group = 'de.pixelmindmc'
version = '1.1.0'

// Configure repositories for dependencies
repositories {
    // Use Maven Central repository
    mavenCentral()
    // Add SpigotMC repository for Spigot API dependencies
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    // Add Sonatype repository for other dependencies
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

// Declare project dependencies
dependencies {
    // Spigot API dependency
    compileOnly 'org.spigotmc:spigot-api:1.21.2-R0.1-SNAPSHOT'

    // BStats dependency
    implementation 'org.bstats:bstats-bukkit:3.1.0'

    // Apache Commons Lang dependency
    compileOnly 'org.apache.commons:commons-lang3:3.17.0'

    // CarbonChat API dependency
    compileOnly("de.hexaoxi:carbonchat-api:3.0.0-beta.27")
}

// Configure Java version compatibility
def targetJavaVersion = 21
java {
    // Set source and target compatibility to the specified Java version
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
}

// Configure Java compilation tasks
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// Configure the shadow JAR task
tasks.named('shadowJar') {
    archiveClassifier.set('')

    // Relocate package to avoid conflicts, if needed
    relocate('org.bstats', 'de.pixelmindmc.pixelchat.metrics')

    // Exclude unnecessary META-INF files from the final JAR
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'

    // Define the manifest attributes for the final JAR
    manifest {
        attributes('Implementation-Title': name,
                'Implementation-Version': version,
                'Main-Class': 'de.pixelmindmc.pixelchat')
    }
}

// Ensure both JARs are built during the 'build' task
tasks.build {
    dependsOn tasks.shadowJar
}

// Configure the processResources task
tasks.processResources {
    def props = [version: version]
    inputs.properties(props)
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand(props)
    }
}