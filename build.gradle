/*
 * This file is part of PixelChatGuardian.
 * Copyright (C) 2024 PixelMindMC
 */

plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.2'
}

group = 'de.pixelmindmc'
version = '0.1.0'
description= 'Enhance your Minecraft experience with our AI-powered chat moderation plugin, featuring advanced chat and link filtering, plus emoji support.'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    // Spigot API dependency
    compileOnly 'org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT'

    // BStats dependency
    implementation 'org.bstats:bstats-bukkit:3.0.2'

    // Apache Commons Lang dependency
    compileOnly 'org.apache.commons:commons-lang3:3.15.0'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.named('shadowJar') {
    archiveClassifier.set('shadowJar')

    // Relocate package to avoid conflicts, if needed
    relocate('org.bstats', 'de.pixelmindmc.pixelchat.metrics')

    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF' // Exclude unwanted META-INF files

    // Define the manifest attributes for the final JAR
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Main-Class': 'de.pixelmindmc.pixelchat'
        )
    }
}

// Ensure the shadow JAR is built as part of the 'build' task
tasks.build {
    dependsOn tasks.shadowJar
}

// Configure the process resources
processResources {
    def props = [version: version, description: description]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}